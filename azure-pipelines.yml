name: $(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

trigger:
- master

resources:
- repo: self

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'simplyworksacr'
  imageRepository: 'serverless'
  containerRegistry: 'simplyworks.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  k8sServiceConnection: 'k8s-s9'

    
stages:

- stage: Nuget
  displayName: Nuget build and push 
  jobs:
  - job: build
    displayName: build and push image
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk 3.1.101'
        inputs:
          packageType: sdk
          version: 3.1.101
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
          feedsToUse: 'config'
          nugetConfigPath: 'nuget.config'

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          projects: '**/*.csproj'
          arguments: '--configuration $(BuildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'dotnet test'
        inputs:
          command: test
          projects: '**/*Tests/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'dotnet pack'
        inputs:
          command: pack
          packagesToPack: 'SW.Serverless/SW.Serverless.csproj;SW.Serverless.Sdk/SW.Serverless.Sdk.csproj'
          nobuild: true
          versioningScheme: byBuildNumber

      - task: DotNetCoreCLI@2
        displayName: 'dotnet push'
        inputs:
          command: push
          publishVstsFeed: 'e5fb2e9c-1207-48a4-8f7b-2e6b32308210'


- stage: Build
  displayName: Build and push image
  dependsOn: Nuget
  jobs:
  - job: build
    displayName: build and push image
    steps:
      - task: VersionDotNetCoreAssemblies@2
        inputs:
          Path: '$(Build.SourcesDirectory)'
          VersionNumber: '$(Build.BuildNumber)'
          Injectversion: False
          VersionRegex: '\d+\.\d+\.\d+\.\d+'
          FilenamePattern: '.csproj'
          SDKNames: 'Microsoft.NET.Sdk'
          OutputVersion: 'OutputedVersion'

      - task: Docker@2
        displayName: Build and push an image to container registry
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tag)
            latest

      - task: PublishPipelineArtifact@1
        displayName: "Publish artifacts"
        inputs:
          path: $(System.DefaultWorkingDirectory)/charts
          artifact: charts


- stage: Dev
  displayName: Deploy to dev
  dependsOn: Build
  jobs:
    - deployment: Dev
      displayName: Deploy to dev
      environment: 'development'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2
                displayName: Downloadin artifacts
                inputs:
                  artifact: charts

              - task: HelmInstaller@0
                displayName: 'Install Helm latest'
                inputs:
                  helmVersion: 3.1.0
                  checkLatestHelmVersion: false
                  installKubectl: true

              - task: HelmDeploy@0
                displayName: 'helm upgrade'
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceConnection: '$(k8sServiceConnection)'
                  command: upgrade
                  chartType: FilePath
                  chartPath: $(Pipeline.Workspace)/$(imageRepository)
                  releaseName: '$(Environment.Name)-$(imageRepository)'
                  overrideValues: 'image.tag=$(tag)'
                  valueFile: '$(Pipeline.Workspace)/$(imageRepository)/$(Environment.Name)-values.yaml'

