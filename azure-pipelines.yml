name: $(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

trigger:
- master

resources:
- repo: self

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: S3Bucket
  - name: buildConfiguration
    value: 'Release'


steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk 3.1.201'
    inputs:
      packageType: sdk
      version: 3.1.201
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: 'restore'
      projects: '**/*.csproj'



  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: '**/*.csproj'
      arguments: '--configuration $(BuildConfiguration)'

  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
    displayName: 'Replace tokens'
    inputs:
      targetFiles: |
        **/*.json

  - task: DotNetCoreCLI@2
    displayName: 'dotnet test'
    inputs:
      command: test
      projects: '**/*Tests/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: pack
      packagesToPack: 'SW.Serverless.Sdk/SW.Serverless.Sdk.csproj;'
      nobuild: true
      versioningScheme: byBuildNumber

  - task: NuGetCommand@2
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: 'swnuget' 